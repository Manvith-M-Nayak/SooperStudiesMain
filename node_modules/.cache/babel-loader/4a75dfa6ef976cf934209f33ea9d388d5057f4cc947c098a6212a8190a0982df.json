{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manvi\\\\.vscode\\\\New\\\\SooperStudiesMain\\\\src\\\\pages\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport React from 'react';\nimport HeaderWithSidebar from '../Sidebar';\nimport './Tasks.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TaskStatus extends React.Component {\n  render() {\n    const completed = this.props.completed;\n    if (completed) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"task-status\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"task-status\",\n      children: \"Scheduled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 14\n    }, this);\n  }\n}\nfunction Tasks() {\n  _s();\n  let [tasks, setTasks] = useState([]);\n  let [name, setName] = useState('');\n  let [description, setDescription] = useState('');\n  let [schedule, setSchedule] = useState('');\n  let [editingId, setEditingId] = useState(null);\n  const addOrUpdateTask = e => {\n    e.preventDefault();\n    if (editingId) {\n      let updatedTasks = [];\n      for (let task of tasks) {\n        if (task.id === editingId) {\n          task.name = name;\n          task.description = description;\n          task.schedule = schedule;\n        }\n        updatedTasks.push(task);\n      }\n      setTasks(updatedTasks);\n      setEditingId(null);\n    } else {\n      const newTask = {\n        id: Date.now(),\n        name: name,\n        description: description,\n        schedule: schedule,\n        completed: false\n      };\n      const newTasksArray = tasks.slice();\n      newTasksArray.push(newTask);\n      setTasks(newTasksArray);\n    }\n    setName('');\n    setDescription('');\n    setSchedule('');\n  };\n  const deleteTask = id => {\n    let remainingTasks = [];\n    for (let task of tasks) {\n      if (task.id !== id) remainingTasks.push(task);\n    }\n    setTasks(remainingTasks);\n  };\n  const toggleComplete = id => {\n    let toggledTasks = [];\n    for (let task of tasks) {\n      if (task.id === id) {\n        task.completed = !task.completed;\n      }\n      toggledTasks.push(task);\n    }\n    setTasks(toggledTasks);\n  };\n  const startEditing = task => {\n    setEditingId(task.id);\n    setName(task.name);\n    setDescription(task.description);\n    setSchedule(task.schedule);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderWithSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addOrUpdateTask,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: schedule,\n        onChange: e => setSchedule(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editingId ? 'Update Task' : 'Add Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `task ${task.completed ? 'completed' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => toggleComplete(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: task.completed ? \"task1\" : \"task2\",\n            children: [\"Task :\", task.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: task.completed ? \"task1\" : \"task2\",\n            children: [\" Description :\", task.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: task.completed ? \"task1\" : \"task2\",\n            children: [\" \", task.schedule, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TaskStatus, {\n            completed: task.completed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => startEditing(task),\n          className: \"edit-button\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task.id),\n          className: \"delete-button\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(Tasks, \"KWMTW1owakhwJWrkfTDqD2bp7pM=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useState","React","HeaderWithSidebar","jsxDEV","_jsxDEV","TaskStatus","Component","render","completed","props","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Tasks","_s","tasks","setTasks","name","setName","description","setDescription","schedule","setSchedule","editingId","setEditingId","addOrUpdateTask","e","preventDefault","updatedTasks","task","id","push","newTask","Date","now","newTasksArray","slice","deleteTask","remainingTasks","toggleComplete","toggledTasks","startEditing","onSubmit","type","placeholder","value","onChange","target","required","map","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/manvi/.vscode/New/SooperStudiesMain/src/pages/Tasks.js"],"sourcesContent":["import { useState } from 'react';\r\nimport React from 'react';\r\nimport HeaderWithSidebar from '../Sidebar';\r\nimport './Tasks.css';\r\n\r\nclass TaskStatus extends React.Component {\r\n  render() {\r\n    const completed = this.props.completed;\r\n    if (completed) {\r\n      return <span className=\"task-status\">Completed</span>;\r\n    }\r\n      return <span className=\"task-status\">Scheduled</span>;\r\n  }\r\n}\r\n\r\nfunction Tasks() {\r\n  let [tasks, setTasks] = useState([]);\r\n  let [name, setName] = useState('');\r\n  let [description, setDescription] = useState('');\r\n  let [schedule, setSchedule] = useState('');\r\n  let [editingId, setEditingId] = useState(null);\r\n\r\n  const addOrUpdateTask = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (editingId) {\r\n      let updatedTasks = [];\r\n      for (let task of tasks) {\r\n        if (task.id === editingId) {\r\n          task.name = name;\r\n          task.description = description;\r\n          task.schedule = schedule;\r\n        }\r\n        updatedTasks.push(task);\r\n      }\r\n      setTasks(updatedTasks);\r\n      setEditingId(null);\r\n    } \r\n    else \r\n    {\r\n      const newTask = {\r\n        id: Date.now(),\r\n        name: name,\r\n        description: description,\r\n        schedule: schedule,\r\n        completed: false,\r\n      };\r\n      const newTasksArray = tasks.slice();\r\n      newTasksArray.push(newTask);\r\n      setTasks(newTasksArray);\r\n    }\r\n    setName('');\r\n    setDescription('');\r\n    setSchedule('');\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    let remainingTasks = [];\r\n    for (let task of tasks) {\r\n      if (task.id !== id) \r\n        remainingTasks.push(task);\r\n    }\r\n    setTasks(remainingTasks);\r\n  };\r\n\r\n  const toggleComplete = (id) => {\r\n    let toggledTasks = [];\r\n    for (let task of tasks) {\r\n      if (task.id === id) {\r\n        task.completed = !task.completed;\r\n      }\r\n      toggledTasks.push(task);\r\n    }\r\n    setTasks(toggledTasks);\r\n  };\r\n\r\n  const startEditing = (task) => {\r\n    setEditingId(task.id);\r\n    setName(task.name);\r\n    setDescription(task.description);\r\n    setSchedule(task.schedule);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <HeaderWithSidebar />\r\n      <h1>Tasks</h1>\r\n      <form onSubmit={addOrUpdateTask}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Task Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Task Description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          value={schedule}\r\n          onChange={(e) => setSchedule(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">{editingId ? 'Update Task' : 'Add Task'}</button>\r\n      </form>\r\n\r\n      <ul>\r\n        {tasks.map((task) => (\r\n          <li key={task.id} className={`task ${task.completed ? 'completed' : ''}`}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={task.completed}\r\n              onChange={() => toggleComplete(task.id)}\r\n            />\r\n            <div className=\"task-details\">\r\n              <span className={task.completed ? \"task1\" :\"task2\"}>Task :{task.name}</span>\r\n              <span className={task.completed ? \"task1\" :\"task2\"}> Description :{task.description}</span>\r\n              <span className={task.completed ? \"task1\" :\"task2\"}> {task.schedule} </span>\r\n              <TaskStatus completed={task.completed}/>\r\n            </div>\r\n            <button onClick={() => startEditing(task)} className=\"edit-button\">Edit</button>\r\n            <button onClick={() => deleteTask(task.id)} className=\"delete-button\">Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tasks;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}