{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manvi\\\\.vscode\\\\New\\\\SooperStudiesMain\\\\src\\\\pages\\\\MemoryGames.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport HeaderWithSidebar from '../Sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Memorygames() {\n  _s();\n  const [selectedGame, setSelectedGame] = useState('cardMatching'); // Track which game to show\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HeaderWithSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Memory Games\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedGame(e.target.value),\n        value: selectedGame,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cardMatching\",\n          children: \"Card Matching Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"numberSequence\",\n          children: \"Number Sequence Memory Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), selectedGame === 'cardMatching' && /*#__PURE__*/_jsxDEV(CardMatchingGame, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 45\n      }, this), selectedGame === 'numberSequence' && /*#__PURE__*/_jsxDEV(NumberSequenceGame, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 47\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_s(Memorygames, \"tDi1iiXaOOrX5SpDyieUtmJIfvY=\");\n_c = Memorygames;\nfunction CardMatchingGame() {\n  _s2();\n  const [cards, setCards] = useState(shuffleCards());\n  const [flippedCards, setFlippedCards] = useState([]);\n  const [matchedCards, setMatchedCards] = useState([]);\n  const [score, setScore] = useState(0);\n  function shuffleCards() {\n    const cardValues = ['A', 'B', 'C', 'D'];\n    const doubledCards = [...cardValues, ...cardValues];\n    return doubledCards.sort(() => Math.random() - 0.5).map((value, index) => ({\n      id: index,\n      value,\n      flipped: false\n    }));\n  }\n  const handleCardClick = id => {\n    if (flippedCards.length === 2 || matchedCards.includes(id)) return;\n    const updatedCards = cards.map(card => card.id === id ? {\n      ...card,\n      flipped: true\n    } : card);\n    setCards(updatedCards);\n    const newFlippedCards = [...flippedCards, id];\n    setFlippedCards(newFlippedCards);\n    if (newFlippedCards.length === 2) {\n      checkForMatch(newFlippedCards, updatedCards);\n    }\n  };\n  const checkForMatch = (flipped, updatedCards) => {\n    const [firstCard, secondCard] = flipped.map(id => updatedCards.find(card => card.id === id));\n    if (firstCard.value === secondCard.value) {\n      setMatchedCards(prev => [...prev, firstCard.id, secondCard.id]);\n      setScore(score + 1);\n    } else {\n      setTimeout(() => {\n        setCards(prev => prev.map(card => flipped.includes(card.id) ? {\n          ...card,\n          flipped: false\n        } : card));\n      }, 1000);\n    }\n    setFlippedCards([]);\n  };\n  const resetGame = () => {\n    setCards(shuffleCards());\n    setFlippedCards([]);\n    setMatchedCards([]);\n    setScore(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Card Matching Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card ${card.flipped || matchedCards.includes(card.id) ? 'flipped' : ''}`,\n        onClick: () => handleCardClick(card.id),\n        children: card.flipped || matchedCards.includes(card.id) ? card.value : '?'\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your current score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetGame,\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s2(CardMatchingGame, \"yy8z64y/CBS8+Cd5M9jhpe7gvx0=\");\n_c2 = CardMatchingGame;\nfunction NumberSequenceGame() {\n  _s3();\n  const [sequence, setSequence] = useState([]);\n  const [inputSequence, setInputSequence] = useState([]);\n  const [round, setRound] = useState(1);\n  const [message, setMessage] = useState('Click Start to begin!');\n  const [score, setScore] = useState(0);\n  const generateSequence = length => {\n    return Array.from({\n      length\n    }, () => Math.floor(Math.random() * 9) + 1);\n  };\n  const startGame = () => {\n    const newSequence = generateSequence(round);\n    setSequence(newSequence);\n    setInputSequence([]);\n    setMessage('Memorize this sequence!');\n    alert(`Memorize: ${newSequence.join(' ')}`); // Show sequence to the user\n  };\n  const handleInput = value => {\n    const newInputSequence = [...inputSequence, value];\n    setInputSequence(newInputSequence);\n\n    // Check if the sequence matches\n    if (sequence[newInputSequence.length - 1] !== value) {\n      setMessage('Wrong sequence! Game over.');\n      setRound(1);\n      setScore(0);\n      return;\n    }\n    if (newInputSequence.length === sequence.length) {\n      setMessage('Correct! Moving to the next round.');\n      setRound(round + 1);\n      setScore(score + 1);\n      setTimeout(() => startGame(), 1000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Number Sequence Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"number-buttons\",\n      children: Array.from({\n        length: 9\n      }, (_, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleInput(i + 1),\n        children: i + 1\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGame,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n_s3(NumberSequenceGame, \"QFtNCVMsvmuyKjhSR97tsb9DoSs=\");\n_c3 = NumberSequenceGame;\nexport default Memorygames;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Memorygames\");\n$RefreshReg$(_c2, \"CardMatchingGame\");\n$RefreshReg$(_c3, \"NumberSequenceGame\");","map":{"version":3,"names":["React","useState","HeaderWithSidebar","jsxDEV","_jsxDEV","Memorygames","_s","selectedGame","setSelectedGame","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","e","target","value","CardMatchingGame","NumberSequenceGame","_c","_s2","cards","setCards","shuffleCards","flippedCards","setFlippedCards","matchedCards","setMatchedCards","score","setScore","cardValues","doubledCards","sort","Math","random","map","index","id","flipped","handleCardClick","length","includes","updatedCards","card","newFlippedCards","checkForMatch","firstCard","secondCard","find","prev","setTimeout","resetGame","onClick","_c2","_s3","sequence","setSequence","inputSequence","setInputSequence","round","setRound","message","setMessage","generateSequence","Array","from","floor","startGame","newSequence","alert","join","handleInput","newInputSequence","_","i","_c3","$RefreshReg$"],"sources":["C:/Users/manvi/.vscode/New/SooperStudiesMain/src/pages/MemoryGames.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport HeaderWithSidebar from '../Sidebar';\r\n\r\nfunction Memorygames() {\r\n  const [selectedGame, setSelectedGame] = useState('cardMatching'); // Track which game to show\r\n\r\n  return (\r\n    <div>\r\n      <HeaderWithSidebar />\r\n      <div className=\"content\">\r\n        <h1>Memory Games</h1>\r\n        <select onChange={(e) => setSelectedGame(e.target.value)} value={selectedGame}>\r\n          <option value=\"cardMatching\">Card Matching Game</option>\r\n          <option value=\"numberSequence\">Number Sequence Memory Game</option>\r\n        </select>\r\n        {selectedGame === 'cardMatching' && <CardMatchingGame />}\r\n        {selectedGame === 'numberSequence' && <NumberSequenceGame />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CardMatchingGame() {\r\n  const [cards, setCards] = useState(shuffleCards());\r\n  const [flippedCards, setFlippedCards] = useState([]);\r\n  const [matchedCards, setMatchedCards] = useState([]);\r\n  const [score, setScore] = useState(0);\r\n\r\n  function shuffleCards() {\r\n    const cardValues = ['A', 'B', 'C', 'D'];\r\n    const doubledCards = [...cardValues, ...cardValues];\r\n    return doubledCards.sort(() => Math.random() - 0.5).map((value, index) => ({\r\n      id: index,\r\n      value,\r\n      flipped: false,\r\n    }));\r\n  }\r\n\r\n  const handleCardClick = (id) => {\r\n    if (flippedCards.length === 2 || matchedCards.includes(id)) return;\r\n\r\n    const updatedCards = cards.map((card) =>\r\n      card.id === id ? { ...card, flipped: true } : card\r\n    );\r\n    setCards(updatedCards);\r\n\r\n    const newFlippedCards = [...flippedCards, id];\r\n    setFlippedCards(newFlippedCards);\r\n\r\n    if (newFlippedCards.length === 2) {\r\n      checkForMatch(newFlippedCards, updatedCards);\r\n    }\r\n  };\r\n\r\n  const checkForMatch = (flipped, updatedCards) => {\r\n    const [firstCard, secondCard] = flipped.map((id) =>\r\n      updatedCards.find((card) => card.id === id)\r\n    );\r\n\r\n    if (firstCard.value === secondCard.value) {\r\n      setMatchedCards((prev) => [...prev, firstCard.id, secondCard.id]);\r\n      setScore(score + 1);\r\n    } else {\r\n      setTimeout(() => {\r\n        setCards((prev) =>\r\n          prev.map((card) =>\r\n            flipped.includes(card.id) ? { ...card, flipped: false } : card\r\n          )\r\n        );\r\n      }, 1000);\r\n    }\r\n\r\n    setFlippedCards([]);\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setCards(shuffleCards());\r\n    setFlippedCards([]);\r\n    setMatchedCards([]);\r\n    setScore(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Card Matching Game</h2>\r\n      <div className=\"card-grid\">\r\n        {cards.map((card) => (\r\n          <div\r\n            key={card.id}\r\n            className={`card ${card.flipped || matchedCards.includes(card.id) ? 'flipped' : ''}`}\r\n            onClick={() => handleCardClick(card.id)}\r\n          >\r\n            {card.flipped || matchedCards.includes(card.id) ? card.value : '?'}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <p>Your current score: {score}</p>\r\n      <button onClick={resetGame}>Reset Game</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NumberSequenceGame() {\r\n  const [sequence, setSequence] = useState([]);\r\n  const [inputSequence, setInputSequence] = useState([]);\r\n  const [round, setRound] = useState(1);\r\n  const [message, setMessage] = useState('Click Start to begin!');\r\n  const [score, setScore] = useState(0);\r\n\r\n  const generateSequence = (length) => {\r\n    return Array.from({ length }, () => Math.floor(Math.random() * 9) + 1);\r\n  };\r\n\r\n  const startGame = () => {\r\n    const newSequence = generateSequence(round);\r\n    setSequence(newSequence);\r\n    setInputSequence([]);\r\n    setMessage('Memorize this sequence!');\r\n    alert(`Memorize: ${newSequence.join(' ')}`); // Show sequence to the user\r\n  };\r\n\r\n  const handleInput = (value) => {\r\n    const newInputSequence = [...inputSequence, value];\r\n    setInputSequence(newInputSequence);\r\n\r\n    // Check if the sequence matches\r\n    if (sequence[newInputSequence.length - 1] !== value) {\r\n      setMessage('Wrong sequence! Game over.');\r\n      setRound(1);\r\n      setScore(0);\r\n      return;\r\n    }\r\n\r\n    if (newInputSequence.length === sequence.length) {\r\n      setMessage('Correct! Moving to the next round.');\r\n      setRound(round + 1);\r\n      setScore(score + 1);\r\n      setTimeout(() => startGame(), 1000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Number Sequence Memory Game</h2>\r\n      <p>{message}</p>\r\n      <div className=\"number-buttons\">\r\n        {Array.from({ length: 9 }, (_, i) => (\r\n          <button key={i} onClick={() => handleInput(i + 1)}>\r\n            {i + 1}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <p>Your score: {score}</p>\r\n      <button onClick={startGame}>Start</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Memorygames;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}